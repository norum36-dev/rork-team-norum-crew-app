workflows:
  android-release-apk:
    name: Android Release APK
    max_build_duration: 60
    environment:
      vars:
        CI: "1"
        EXPO_NO_TELEMETRY: "1"
    scripts:
      - name: Installer avhengigheter (auto-detect Yarn/NPM)
        script: |
          set -e
          if [ -f yarn.lock ]; then
            echo "Detected yarn.lock → using Yarn"
            corepack enable
            corepack prepare yarn@stable --activate
            yarn install --frozen-lockfile
            export PKG_MGR="yarn"
          elif [ -f package-lock.json ]; then
            echo "Detected package-lock.json → using NPM (ci)"
            npm ci
            export PKG_MGR="npm"
          else
            echo "No lockfile found → fallback to NPM install (legacy peer deps)"
            npm install --legacy-peer-deps
            export PKG_MGR="npm"
          fi
          echo "Package manager: $PKG_MGR"

      - name: Sørg for at Expo er installert (expo@^54)
        script: |
          set -e
          node -e "const fs=require('fs');const p=JSON.parse(fs.readFileSync('package.json','utf8'));process.exit(p.dependencies && p.dependencies.expo ? 0 : 1)"
          if [ $? -ne 0 ]; then
            echo "Expo mangler → installerer expo@^54"
            if [ -f yarn.lock ]; then
              corepack enable
              corepack prepare yarn@stable --activate
              yarn add expo@^54
            else
              npm install --save expo@^54 --legacy-peer-deps
            fi
          else
            echo "Expo finnes allerede i dependencies"
          fi
          npx expo --version

      - name: Harmoniser Expo peer-deps (React/React Native)
        script: |
          set -e
          # Dette sikrer at react / react-dom / react-native får versjoner som matcher Expo SDK 54
          npx expo install react react-dom react-native

      - name: Generer native Android-prosjekt (expo prebuild)
        script: |
          set -e
          npx expo prebuild --platform android --no-install

      - name: Gjenopprett keystore fra base64
        script: |
          set -e
          echo "Restoring keystore to android/app/upload-keystore.jks"
          mkdir -p "$CM_BUILD_DIR/android/app"
          echo "$CM_KEYSTORE" | base64 --decode > "$CM_BUILD_DIR/android/app/upload-keystore.jks"
          ls -la "$CM_BUILD_DIR/android/app"

      - name: Legg til signing-properties til Gradle
        script: |
          set -e
          cat >> "$CM_BUILD_DIR/android/gradle.properties" <<EOF
          MYAPP_UPLOAD_STORE_FILE=upload-keystore.jks
          MYAPP_UPLOAD_KEY_ALIAS=$CM_KEY_ALIAS
          MYAPP_UPLOAD_STORE_PASSWORD=$CM_KEYSTORE_PASSWORD
          MYAPP_UPLOAD_KEY_PASSWORD=$CM_KEY_PASSWORD
          EOF
          echo "Signing properties appended to android/gradle.properties"
          sed -E 's/(PASSWORD=).+/\1[HIDDEN]/g' "$CM_BUILD_DIR/android/gradle.properties" || true

      - name: Bygg signert Release APK
        script: |
          set -e
          cd android
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew :app:assembleRelease --stacktrace

    artifacts:
      - android/app/build/outputs/apk/release/app-release.apk
